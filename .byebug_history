c
over_due_bookings = Booking.where(user_id: current_user.id).where('due_date<?', Date.today)
c
@user = current_user
c
total_balance = @user.balance
@user = User.find(current_user.id)
current_user.id
current_user
c
total_balance = @user.balance
@user = User.find(params[:user_id])
c
@user
 @user = User.find(params[:user_id])
c
balance = total_balance * 100
 total_balance = @user.balance
@user
@user = User.find(params[:user_id])
c
 balance = total_balance * 100
total_balance = @user.balance
@user
@user = User.find(params[:user_id])
c
balance = (@user.balance/100).to_i
balance = @user.balance/100
balance = @user.balance
balance = number_to_currency(4806/100).to_i
@user.balance
balance = number_to_currency(@user.balance/100).to_i
@user
 @user = current_user
c
name: @user.email,
unit_amount: balance,
balance = number_to_currency(@user.balance/100)
balance = @user.balance
balance
@user
@user = current_user
c
balance
balance = number_to_currency(@user.balance/100)
balance = number_to_currency(@user.balance/100.0)
@user = current_user
c
n
balance
n
@user
@user = current_user
@user
balance = number_to_currency(@user.balance/100.0)
c
balance = number_to_currency(@user.balance/100.0)
balance = number_to_currency(@user.balance/100)
@user = current_user
c
@user.balance/100
@user.balance
@user
@user = current_user
c
@user
@user = User.find(current_user.id)
@user
c
@user.balance
@user
@user = User.find(current_user.id)
c
@user = User.find(current_user.id)
@user = User.find(params[id: current_user.id])
@user = User.find(params[id: a])
a
a = current_user.id
current_user.id
@user = User.find(params[id: current_user.id])
c
@user = User.find(paramsp[id: 2])
@user = User.find(paramsp[id: current_user.id])
current_user.id
current_user
@user = User.find(paramsp[id: current_user.id])
c
@user.username
@user.balance
@user
@user = User.find(current_user.id)
c
@user.balance
@user
@user = User.find(current_user.id)
@user
c
@user
@user = User.find(current_user.id)
@user
c
@user.balance
@user
@user = User.find(2)
@user = User.find(id: 2)
@user = User.find(id: current_user.id)
@user
@user = User.find(id: current_user.id)
@user
c
reserve_user.reservations
current_user.reservations.status
c
user.reservations.status
user.reservations.status == 0
c
current_user.bookings.empty?
current_user.bookings?
current_user
c
 @over_due_bookings = current_user.bookings.where('due_date<?', Date.today)
 @over_due_bookings = current_user.booking.where('due_date<?', Date.today)
 @over_due_bookings = current_user.Booking.where('due_date<?', Date.today)
current_user
@over_due_bookings
 @over_due_bookings = Booking.where('due_date<?', Date.today)
c
current_user.@over_due_bookings.count
current_user
@over_due_bookings.count
@over_due_bookings
@over_due_bookings = Booking.where('due_date<?', Date.today)
@over_due_bookings
c
params[:book]
params
c
params[:title]
params[:type]
params[:books]
params[:book]
params
params[:type]
params[:book]
c
Periodical.new(book_params)
params[:book][:type] == "Periodical"
n
params
c
current_user.update(balance: current_user.balance + @total_charge)
c
current_user.update(balance: current_user.balance + @total_charge)
@over_dates
@total_charge = @over_dates * 10
c
@total_charge = @over_dates * 10
@total_charge
@over_dates
current_user.update(balance: current_user.balance + @total_charge)
@over_due_bookings = Booking.where('due_date<?', Date.today)
@over_due_bookings
c
n
c
@borrowed_books
c
@borrowed_books
current_user
c
current_user
@borrowed_books
c
@borrowed_books = User.borrowed_books(current_user)
User
Uawe
current_user
@borrowed_books
c
current_user.bookings.where(book_id: @book.id)
c
@booking.destroy_all
c
@booking.destroy_all
@booking
c
Booking.where(book_id: @book).destroy_all
 @book = Book.find(37)
c
Booking.where(book_id: @book).destroy_all
@book = Book.find(37)
c
Booking.where(book_id: @book).destroy_all
@book = Book.find(36)
c
Booking.where(book_id: @book.id).destroy_all
@book = Book.find(36)
c
@book.destroy
@book = Book.find(45)
c
Booking.where(book_id: @book).destroy_all
@book
@book = Book.find(45)
c
@borrowed_books = user_bookings.map{ |b| b.book. if b.book.status.eql?("Borrowed") }
@borrowed_books = user_bookings.map{ |b| b.book.count if b.book.status.eql?("Borrowed") }
@borrowed_books.count()
@borrowed_books.count
@borrowed_books
c
@borrowed_books
c
borrowed_books = user_bookings.map{ |b| b.book if b.book.status.eql?("Borrowed") }
borrowed_books = user_bookings.map{ |b| b if b.book.status.eql?("Borrowed") }
borrowed_books = user_bookings.map{ |b| b.book.status.eql?("Borrowed") }
borrowed_books = user_bookings.map{ |b| b.book.status: "Borrowed" }
borrowed_books.count
borrowed_books
borrowed_books = user_bookings.where(status: "Borrowed")
user_bookings = current_user.bookings
current_user.bookings.first.book
current_user.bookings
current_user.booksings
user_bookings
user_bookings = Booking.where(user_id: current_user.id)
c
@books.where(status: "Borrowed")
@books
@books = Booking.where(user_id: current_user, book_id: Book.last)
c
@booked = current_user.books.where(status: "Borrowed")
@books = @booked.where(status: "Borrowed")
@books = @booked.Book.where(status: "Borrowed")
@books = @booked.book.where(status: "Borrowed")
@booked
@booked = current_user.bookings
current_user.bookings
@booked
c
current_user.bookings.where(status: "Borrowed")c
current_user.bookings.where(status: "Borrowed")
current_user.bookings
current_user.Booking.book.where(status: "Borrowed")
current_user.booking.book.where(status: "Borrowed")
current_user.books.where(status: "Borrowed")
current_user.books
current_user
c
@books = @booked.where(status: "Borrowed")
@booked
@booked = current_user.books
user = current_user.books
@books = @booked.where(status: "Borrowed")
@booked = user.books
user = User.find(16)
