c
params[:book]
params
c
params[:title]
params[:type]
params[:books]
params[:book]
params
params[:type]
params[:book]
c
Periodical.new(book_params)
params[:book][:type] == "Periodical"
n
params
c
current_user.update(balance: current_user.balance + @total_charge)
c
current_user.update(balance: current_user.balance + @total_charge)
@over_dates
@total_charge = @over_dates * 10
c
@total_charge = @over_dates * 10
@total_charge
@over_dates
current_user.update(balance: current_user.balance + @total_charge)
@over_due_bookings = Booking.where('due_date<?', Date.today)
@over_due_bookings
c
n
c
@borrowed_books
c
@borrowed_books
current_user
c
current_user
@borrowed_books
c
@borrowed_books = User.borrowed_books(current_user)
User
Uawe
current_user
@borrowed_books
c
current_user.bookings.where(book_id: @book.id)
c
@booking.destroy_all
c
@booking.destroy_all
@booking
c
Booking.where(book_id: @book).destroy_all
 @book = Book.find(37)
c
Booking.where(book_id: @book).destroy_all
@book = Book.find(37)
c
Booking.where(book_id: @book).destroy_all
@book = Book.find(36)
c
Booking.where(book_id: @book.id).destroy_all
@book = Book.find(36)
c
@book.destroy
@book = Book.find(45)
c
Booking.where(book_id: @book).destroy_all
@book
@book = Book.find(45)
c
@borrowed_books = user_bookings.map{ |b| b.book. if b.book.status.eql?("Borrowed") }
@borrowed_books = user_bookings.map{ |b| b.book.count if b.book.status.eql?("Borrowed") }
@borrowed_books.count()
@borrowed_books.count
@borrowed_books
c
@borrowed_books
c
borrowed_books = user_bookings.map{ |b| b.book if b.book.status.eql?("Borrowed") }
borrowed_books = user_bookings.map{ |b| b if b.book.status.eql?("Borrowed") }
borrowed_books = user_bookings.map{ |b| b.book.status.eql?("Borrowed") }
borrowed_books = user_bookings.map{ |b| b.book.status: "Borrowed" }
borrowed_books.count
borrowed_books
borrowed_books = user_bookings.where(status: "Borrowed")
user_bookings = current_user.bookings
current_user.bookings.first.book
current_user.bookings
current_user.booksings
user_bookings
user_bookings = Booking.where(user_id: current_user.id)
c
@books.where(status: "Borrowed")
@books
@books = Booking.where(user_id: current_user, book_id: Book.last)
c
@booked = current_user.books.where(status: "Borrowed")
@books = @booked.where(status: "Borrowed")
@books = @booked.Book.where(status: "Borrowed")
@books = @booked.book.where(status: "Borrowed")
@booked
@booked = current_user.bookings
current_user.bookings
@booked
c
current_user.bookings.where(status: "Borrowed")c
current_user.bookings.where(status: "Borrowed")
current_user.bookings
current_user.Booking.book.where(status: "Borrowed")
current_user.booking.book.where(status: "Borrowed")
current_user.books.where(status: "Borrowed")
current_user.books
current_user
c
@books = @booked.where(status: "Borrowed")
@booked
@booked = current_user.books
user = current_user.books
@books = @booked.where(status: "Borrowed")
@booked = user.books
user = User.find(16)
c
@books.where(status: "Borrowed")
@books.where(status: "Available")
@books.Booking.where(status: "Available")
@books.booking.where(status: "Available")
@books.booking.where(status: "Borrowed")
@books = Book.all
@book.all
@book
@book = Book.find(36)
@booking = Booking.book.where(status: "Borrowed")
c
@book.destroy
@book = Book.find(31)
Booking.where(book_id: 31).destroy_all
Booking.where(book_id: 31).destroy
continue
@book.destroy
@book
@book = Book.find(31).booking.where(book_id: 31)
a = Booking.where(book_id: 31).destroy
a = Booking.where(book_id: 31)
a = booking.where(book_id: 31)
a.destroy(1)
a.delete
a.destroy
a
a = Booking.where(book_id: 31)
a
a = Booking.where(book_id: [1..30])
@book.destroy
@book
@book = Book.find(31)
@book = Book.find(params[31])
@book
c
current_user
c
@book.blob_id
@book.blob
@book
@book = Book.find 47
@book
b = @book.destroy(@book.blob_id)
@book
@book = Book.find 47
c
@book.save
@book.pdf.destroy
@book
@book = Book.find 47
params
@book
c
a = @book.active_storage_attachments(11).destroy
a = @book.active_storage_attachments.destroy
a = @book.destroy
@book.current_user
@book.destroy
a
a.errors
a = @book.destroy
@book.destroy
@book 
@book = Book.find(47)
@book
c
@booking.book.status
@booking.book.update(status: 2)
c
@booking.book.update(status: 0)
reload!
reload
@booking.book.update(status: 0)
@booking.book.update
@booking.save!
@booking
@booking.book.status.save!
@booking.book.status
@booking.book.status = 2
@booking.book.status
@booking.book
@booking
b = Book.first
Book.first.update(status: 2)
Book.first.status = 2
Book.first.status
Book.first
@booking.save
@booking.book.status
@booking.book.status = 2
@booking.book
@booking
c
@booking
@booking.book.status = 2
Book.statuses
@booking.book.statuses
@booking.book.status
@booking.book
@booking
c
params
c
params
c
current_user.bookings.where(current_user.id == bookingsc.user_id)
current_user.bookings.where(current_user.id == bookings.user_id)
current_user.bookings.where(current_user.id == booking.user_id)
current_user.bookings
current_user.@bookings
current_user.joins.bookings.where(current_user.id == bookings.user_id)
current_user.inner_joins.bookings.where(current_user.id == bookings.user_id)
current_user.bookings.where(current_user.id == bookings.user_id)
current_user.bookings
@booking.current_user
@booking.save
@booking = current_user.bookings.build(book_id: @book.id)
@booking = current_user.bookings.build("@book.id")
@booking = current_user.bookings.build(@book.id)
@book
@booking
@booking = current_user.bookings.build(@book)
@booking = current_user.bookings.build(@book.id)
@book = Book.find(8)
c
@book = Book.find(params[:id])
c
@booking.book_id
@booking.book_id = @book.id
@booking
@booking.book_id = @book
@booking
